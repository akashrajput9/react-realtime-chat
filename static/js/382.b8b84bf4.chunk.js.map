{"version":3,"file":"static/js/382.b8b84bf4.chunk.js","mappings":"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","sources":["components/ChatElement.js","components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","components/StyledBadge.js","components/hook-form/FormProvider.js","components/hook-form/RHFAutocomplete.js","components/hook-form/RHFTextField.js","pages/dashboard/Group.js","sections/main/CreateGroup.js","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["import { Avatar, AvatarGroup, Badge, Box, Stack, Typography } from '@mui/material';\nimport {useTheme } from '@mui/material/styles';\nimport StyledBadge from './StyledBadge';\nimport groupAvatar from '../assets/Images/group-icon.png';\nimport { dispatch } from '../redux/store';\nimport { setMessages } from '../redux/slices/messageSlice';\nimport { useSelector } from 'react-redux';\nimport { apifetch } from '../utils/fetchApi';\n\n\nconst ChatElement = (props) => {\n    const {id,is_group,name,users,created_at,is_online,last_message,unread_count} = props;\n    const theme = useTheme();\n    const profile_photo = is_group ? groupAvatar :users[0].profile_photo;\n    const user_name = is_group? name: users[0].name;\n    \n    // const { messages } = useSelector((state) => state.messages);\n    const { token } = useSelector((state) => state.auth);\n    const handleClick = async () => {\n      const data = await apifetch(\"/chat/messages\",token,{conversation_id:id})\n      let dispatch_data = data?.data;\n      dispatch_data.conversation_element = props;\n      dispatch(setMessages(dispatch_data));\n      \n    }\n    return (\n      <Box sx={{\n        width: \"100%\",\n        borderRadius: 1,\n        backgroundColor: theme.palette.mode === 'light'? \"#fff\" : theme.palette.background.default\n      }}\n        onClick={handleClick}\n        p={2}>\n        <Stack direction=\"row\" alignItems='center' justifyContent='space-between'>\n          <Stack direction='row' spacing={2}>\n            {is_online ? <StyledBadge overlap='circular' anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n              variant=\"dot\">\n            <Avatar src={profile_photo} />\n            </StyledBadge> : <Avatar src={profile_photo} /> }\n            \n            <AvatarGroup />\n            <Stack spacing={0.3}>\n              <Typography variant='subtitle2'>\n                {user_name}\n              </Typography>\n              <Typography variant='caption'>\n                {last_message?.content}\n              </Typography>\n            </Stack>\n            </Stack>\n            <Stack spacing={2} alignItems='center'>\n              <Typography sx={{fontWeight:600}} variant='caption'>\n                {created_at}\n              </Typography>\n              <Badge color='primary' badgeContent={unread_count}>\n              </Badge>\n            </Stack>\n          \n          \n        </Stack>\n  \n  \n      </Box>\n    )\n  };\n\n  export default ChatElement","import { styled, alpha } from '@mui/material/styles';\n\nconst Search = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    borderRadius: 20,\n    backgroundColor: alpha(theme.palette.background.default, 1),\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\"\n  }));\n\n  export default Search","import { styled} from '@mui/material/styles';\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }));\n\n  export default SearchIconWrapper;","import { InputBase } from '@mui/material';\nimport { styled} from '@mui/material/styles';\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: \"inherit\",\n    \"& .MuiInputBase-input\": {\n      padding: theme.spacing(1, 1, 1, 0),\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n      width: \"100%\",\n    },\n  }));\n\n  export default StyledInputBase","import styled from \"@emotion/styled\";\nimport { Badge } from \"@mui/material\";\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n    \"& .MuiBadge-badge\": {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"',\n      },\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1,\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0,\n      },\n    },\n  }));\n\n  export default StyledBadge","import React from 'react';\nimport { FormProvider as Form } from 'react-hook-form';\n\nconst FormProvider = ({children, onSubmit, methods}) => {\n  return (\n    <Form {...methods}>\n        <form onSubmit={onSubmit}>\n            {children}\n        </form>\n    </Form>\n  )\n}\n\nexport default FormProvider","import PropTypes from \"prop-types\";\n// form\nimport { useFormContext, Controller } from \"react-hook-form\";\n// @mui\nimport { Autocomplete, TextField } from \"@mui/material\";\n\nRHFAutocomplete.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFAutocomplete({ name, label, helperText, ...other }) {\n  const { control, setValue } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <Autocomplete\n          {...field}\n          fullWidth\n          value={typeof field.value === \"number\" && field.value === 0 ? \"\" : field.value}\n          onChange={(event, newValue) =>\n            setValue(name, newValue, { shouldValidate: true })\n          }\n          {...other}\n          // Remove the `error` prop from Autocomplete\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label={label}\n              error={!!error} // Pass error only to TextField\n              helperText={error ? error.message : helperText}\n            />\n          )}\n        />\n      )}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\n//form\nimport { useFormContext,Controller } from \"react-hook-form\";\n// @mui\nimport { TextField } from \"@mui/material\";\n\nRHFTextField.propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.string,\n    helperText: PropTypes.node\n}\n\nexport default function RHFTextField({name, helperText, ...other}){\n\n    const {control} = useFormContext();\n    return (\n       <Controller name={name} control={control} render={({field,fieldState:{error}})=>(\n        <TextField {...field} fullWidth\n         value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n         error={!!error} helperText={error ? error.message : helperText}\n        {...other}/>\n       )}/>\n    )\n}","import { Box, Stack, Typography, Link, IconButton, Divider } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport { Search, SearchIconWrapper, StyledInputBase } from '../../components/Search'\nimport { MagnifyingGlass, Plus } from 'phosphor-react';\nimport { useTheme } from \"@mui/material/styles\";\nimport { SimpleBarStyle } from '../../components/Scrollbar';\nimport '../../css/global.css';\nimport { ChatList } from '../../data';\nimport ChatElement from '../../components/ChatElement';\nimport CreateGroup from '../../sections/main/CreateGroup';\nimport { apifetch } from '../../utils/fetchApi';\nimport { dispatch } from '../../redux/store';\nimport { logout } from '../../redux/slices/authSlice';\nimport { useSelector } from 'react-redux';\n\nconst Group = () => {\n    const theme = useTheme();\n    const [openDialog, setOpenDialog] = useState(false);\n    const [chatList,setChatList] = useState([]);\n    const { token } = useSelector((state) => state.auth);\n    const handleCloseDialog = () =>{\n        setOpenDialog(false);\n      }\n\n      useEffect(()=>{\n\n        apifetch(\"/chat\",token,{filter:'groups'}).then((res)=>{\n            console.log('api response',res);\n          if(res?.status == 401){\n            console.log('lgin')\n            dispatch(logout())\n          }else if(res.success == 1){\n            setChatList(res?.data?.conversations?.data)  \n          }\n          \n        });\n      },[])\n    return (\n    <>\n    <Stack direction={'row'} sx={{width:'100%'}}>\n        {/* Left */}\n        <Box sx={{height:'100vh' , \n        backgroundColor:(theme) =>theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background , \n        width:320,\n        boxShadow:'0px 0px 2px rgba(0,0,0,0.25)'}}>\n            <Stack p={3} spacing={2} sx={{maxHeight:'100vh'}}>\n                <Stack>\n                    <Typography variant='h5'>Group</Typography>\n                </Stack>\n                <Stack sx={{width:'100%'}}>\n                <Search>\n                    <SearchIconWrapper>\n                    <MagnifyingGlass color=\"#709CE6\" />\n                    </SearchIconWrapper>\n                    <StyledInputBase placeholder='Search...' inputProps={{ \"aria-label\": \"search\" }} />\n                </Search>\n                </Stack>\n                <Stack direction={'row'} alignItems={'center'} justifyContent={'space-between'}>\n                    <Typography variant='subtitle2' component={Link}>Create New Group</Typography>\n                    <IconButton onClick={() =>{setOpenDialog(true)}}>\n                        <Plus style={{color: theme.palette.primary.main}}/>\n                    </IconButton>\n                </Stack>\n                <Divider/>\n                <Stack spacing={3} className='scrollbar'  sx={{flexGrow:1, overflowY:'scroll', height:'100%'}}>\n                    <SimpleBarStyle  timeout={500} clickOnTrack={false}>\n                        <Stack spacing={2.5}>\n                            {/*  */}\n                            <Typography variant='subtitle2' sx={{color:'#676667'}}>Pinned</Typography>\n                            {/* Pinned */}\n                            {/* {ChatList.filter((el)=> el.pinned).map((el)=>{\n                                return <ChatElement  {...el}/>\n                            })} */}\n\n                              {/*  */}\n                              <Typography variant='subtitle2' sx={{color:'#676667'}}>All Groups</Typography>\n                            {/* Chat List */}\n                            {/* filter((el)=> !el.pinned) */}\n                            {chatList.map((el)=>{\n                                return <ChatElement  {...el}/>\n                            })}\n                        </Stack>\n                    </SimpleBarStyle>\n                </Stack>\n            </Stack>\n        </Box>\n\n        {/* Right */}\n\n    </Stack>\n    {openDialog && <CreateGroup open={openDialog} handleClose={handleCloseDialog}/>}\n    </>\n  )\n}\n\nexport default Group","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Button, Dialog, DialogContent, DialogTitle, Slide, Stack } from '@mui/material'\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as Yup from 'yup';\nimport FormProvider from '../../components/hook-form/FormProvider';\nimport { RHFTextField } from '../../components/hook-form';\nimport RHFAutocomplete from '../../components/hook-form/RHFAutocomplete';\n\nconst MEMBERS = ['Neha', 'Arvin', 'Anas', 'Akash'];\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\nconst CreateGroupForm = ({handleClose}) =>{\n  const NewGroupSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    members: Yup.array().min(2, 'Must have at least 2 members')\n  });\n\n  const defaultValues = {\n    title:'',\n    members:[]\n  }\n\n  const methods = useForm({\n    resolver: yupResolver(NewGroupSchema),\n    defaultValues\n  });\n\n  const { handleSubmit, formState:{}}\n   = methods;\n\n   const onSubmit = async (data) => {\n    try {\n      //api call\n      console.log('Data',data);\n    } catch (error) {\n      console.log(error);\n    }\n   };\n\n   return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        <RHFTextField name='title' label='Title'/>\n        <RHFAutocomplete name='members' label='Members' multiple freeSolo \n        options={MEMBERS.map((option) => option)} ChipProps={{size: 'medium'}}/>\n        <Stack spacing={2} direction='row' alignItems='center' justifyContent='end'>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button type='submit' variant='contained'>\n            Create\n          </Button>\n        </Stack>\n      </Stack>\n    </FormProvider>\n   )\n};\n\nconst CreateGroup = ({open, handleClose}) => {\n  return (\n    <Dialog fullWidth maxWidth='xs' open={open} TransitionComponent={Transition} keepMounted sx={{p:4}}>\n        {/* Title */}\n        <DialogTitle sx={{mb:3}}>Create New Group</DialogTitle>\n        {/* Content */}\n        <DialogContent>\n          {/* Form */}\n          <CreateGroupForm handleClose={handleClose}/>\n        </DialogContent>\n    </Dialog>\n  )\n}\n\n\n\n\nexport default CreateGroup","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["props","id","is_group","name","users","created_at","is_online","last_message","unread_count","theme","useTheme","profile_photo","groupAvatar","user_name","token","useSelector","state","auth","handleClick","apifetch","conversation_id","data","dispatch_data","conversation_element","dispatch","setMessages","Box","sx","width","borderRadius","backgroundColor","palette","mode","background","default","onClick","p","Stack","direction","alignItems","justifyContent","spacing","StyledBadge","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","src","AvatarGroup","Typography","content","fontWeight","Badge","color","badgeContent","styled","position","alpha","marginRight","marginLeft","padding","height","pointerEvents","display","InputBase","paddingLeft","boxShadow","paper","top","left","animation","border","transform","opacity","children","onSubmit","methods","RHFAutocomplete","label","helperText","other","useFormContext","control","setValue","render","field","error","fieldState","fullWidth","value","onChange","event","newValue","shouldValidate","renderInput","params","message","RHFTextField","TextField","useState","openDialog","setOpenDialog","chatList","setChatList","useEffect","filter","then","res","console","log","status","logout","success","conversations","maxHeight","placeholder","inputProps","component","Link","style","primary","main","className","flexGrow","overflowY","timeout","clickOnTrack","map","el","open","handleClose","MEMBERS","Transition","React","ref","Slide","CreateGroupForm","NewGroupSchema","Yup","shape","title","required","members","min","useForm","resolver","yupResolver","defaultValues","handleSubmit","obj","TypeError","formState","FormProvider","multiple","freeSolo","options","option","ChipProps","size","Button","type","Dialog","maxWidth","TransitionComponent","keepMounted","DialogTitle","mb","DialogContent"],"sourceRoot":""}