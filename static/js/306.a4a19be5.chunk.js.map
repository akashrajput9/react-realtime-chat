{"version":3,"file":"static/js/306.a4a19be5.chunk.js","mappings":"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","sources":["socket.js","components/Conversation/Message.js","components/Conversation/MsgTypes.js","components/Conversation/Header.js","components/Conversation/Footer.js","components/Conversation/index.js","components/StyledBadge.js"],"sourcesContent":["import { io } from \"socket.io-client\";\nimport { NODE_SERVER } from \"./config\";\n\nexport const socket = io(NODE_SERVER, {\n    autoConnect: true\n  });","// import { Box, Stack } from '@mui/material'\n// import React, { useEffect } from 'react';\n// import {Chat_History} from '../../data'\n// import { DocMsg, LinkMsg, MediaMsg, ReplyMsg, TextMsg, TimeLine } from './MsgTypes';\n// import { useSelector } from 'react-redux';\n\n// const Message = ({menu}) => {\n//   const { messages } = useSelector((state) => state.messages);\n  \n//   return (\n//     <Box p={3}>\n//         <Stack spacing={3}>\n//             {[...messages?.data].reverse().map((el,index)=>{\n//               switch(el.type){\n//                 case 'text': \n//                   return <TextMsg key={index} el={el} menu={menu} />\n//               }\n//                 // switch (el.type) {\n//                 //     case 'divider':\n//                 //       return <TimeLine key={index} el={el}/>\n                        \n//                 //     case 'msg':\n//                 //         switch (el.subtype) {\n//                 //             case 'img':\n//                 //               return <MediaMsg key={index} el={el} menu={menu}/>\n//                 //             case 'doc':\n//                 //                 return <DocMsg key={index} el={el} menu={menu}/>\n                                \n//                 //             case 'link':\n//                 //                 return <LinkMsg key={index} el={el} menu={menu}/>\n//                 //             case 'reply':\n//                 //                 return <ReplyMsg key={index} el={el} menu={menu}/>\n                        \n//                 //             default:\n//                 //                return <TextMsg key={index} el={el} menu={menu}/>\n//                 //         }\n//                 //         break;\n                \n//                 //     default:\n//                 //       return <></>;\n//                 // }\n//             })}\n//         </Stack>\n//     </Box>\n//   )\n// }\n\n// export default Message\n\n\nimport { Box, Stack } from '@mui/material'\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TextMsg } from './MsgTypes';  // Assuming you're rendering TextMsg\nimport { socket } from '../../socket';\nimport { dispatch } from '../../redux/store';\nimport { addMessage } from '../../redux/slices/messageSlice';\n\nconst Message = ({ menu }) => {\n// socket.on(\"connect\", () => {\n//     console.log(\"Connected to server:\", socket.id);\n// });\n\n// socket.on(\"receive_message\", (data) => {\n//     console.log(\"Message from server:\", data);\n// });\nconst { messages } = useSelector((state) => state.messages);\nconst { user } = useSelector((state) => state.auth);\n  useEffect(() => {\n    // Listen for 'receive_message' event\n    socket.on(\"receive_message\", (data) => {\n        console.log(\"Message received from server:\", data.data.conversation_id,messages.conversation_element.id,data.data.user_id,user.id);\n        if(data.data.conversation_id === messages.conversation_element.id  && data.data.user_id != user.id){\n          dispatch(addMessage(data.data))\n        }\n    });\n\n    return () => {\n        // Clean up the event listener on component unmount\n        socket.off(\"receive_message\");\n    };\n}, []);\n\n\n  \n\n  \n\n  // Ref to the messages container\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    // Scroll to bottom when messages change\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [messages]); // Re-run this effect when `messages` change\n\n  return (\n    <Box p={3}>\n      <Stack spacing={3}>\n        {[...messages?.data].reverse().map((el, index) => {\n          switch (el.type) {\n            case 'text':\n              return <TextMsg key={index} el={el} menu={menu} />;\n            // Add more cases for other message types (e.g., Media, Link, etc.)\n            default:\n              return <></>;\n          }\n        })}\n      </Stack>\n      {/* This empty div will serve as the scroll target */}\n      <div ref={messagesEndRef} />\n    </Box>\n  );\n};\n\nexport default Message;\n","import { Box, Divider, IconButton, Link, Stack, Typography, Menu, MenuItem } from '@mui/material';\nimport { useTheme } from '@mui/material/styles'\nimport { DotsThreeVertical, DownloadSimple, Image } from 'phosphor-react';\nimport React from 'react';\nimport {Message_options} from '../../data'\nimport { useSelector } from 'react-redux';\n\nconst DocMsg = ({el,menu}) => {\n    const theme = useTheme();\n  return (\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\n        <Box p={1.5} sx={{\n                backgroundColor: el.incoming ? theme.palette.background.default :\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\n            }}>\n        <Stack spacing={2}>\n            <Stack p={2} spacing={3} direction='row' alignItems='center' \n            sx={{backgroundColor:theme.palette.background.paper, borderRadius:1}}>\n                <Image size={48}/>\n                <Typography variant='caption'>\n                    Abstract.png\n                </Typography>\n                <IconButton>\n                    <DownloadSimple/>\n                </IconButton>\n            </Stack>\n            <Typography variant='body2' sx={{color: el.incoming ? theme.palette.text : '#fff' }} >\n                {el.message}\n            </Typography>\n        </Stack>\n        </Box>\n        {menu && <MessageOptions/>}\n        \n    </Stack>\n  )\n}\n\nconst LinkMsg = ({el,menu}) => {\n    const theme = useTheme();\n  return (\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\n        <Box p={1.5} sx={{\n                backgroundColor: el.incoming ? theme.palette.background.default :\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\n            }}>\n        <Stack spacing={2}>\n            <Stack p={2} spacing={3} alignItems='start'\n             sx={{backgroundColor:theme.palette.background.paper, borderRadius: 1}}>\n                <img src={el.preview} alt={el.message} style={{maxHeight:210, borderRadius:'10px'}}/>\n                <Stack spacing={2}>\n                    <Typography variant='subtitle2'>Creating Chat App</Typography>\n                    <Typography variant='subtitle2' sx={{color:theme.palette.primary.main}} \n                    component={Link} to=\"//https://www.youtube.com\">www.youtube.com</Typography>\n                </Stack>\n                <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\n                    {el.message}\n                </Typography>\n            </Stack>\n        </Stack>\n        </Box>\n        {menu && <MessageOptions/>}\n    </Stack>\n  )\n}\n\nconst ReplyMsg = ({el, menu}) => {\n    const theme = useTheme();\n  return (\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\n        <Box p={1.5} sx={{\n                backgroundColor: el.incoming ? theme.palette.background.default :\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\n            }}>\n        <Stack spacing={2}>\n            <Stack p={2} direction='column' spacing={3} alignItems='center'\n            sx={{backgroundColor:theme.palette.background.paper, borderRadius:1}}>\n                <Typography variant='body2' color={theme.palette.text}>\n                    {el.message}\n                </Typography>    \n            </Stack>\n            <Typography variant='body2' color={ el.incoming ? theme.palette.text : '#fff'}>\n                {el.reply}\n            </Typography>\n        </Stack>\n        </Box>\n        {menu && <MessageOptions/>}\n    </Stack>\n  )\n}\n\nconst MediaMsg = ({el,menu}) => {\n    const theme = useTheme();\n  return (\n    <Stack direction='row' justifyContent={el.incoming ? 'start' : 'end'}>\n        <Box p={1.5} sx={{\n                backgroundColor: el.incoming ? theme.palette.background.default :\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\n            }}>\n                <Stack spacing={1}>\n                    <img src={el.img} alt={el.message} style={{maxHeight: 210 , borderRadius:'10px'}}/>\n                    <Typography variant='body2' color={el.incoming ? theme.palette.text : '#fff'}>\n                        {el.message}\n                    </Typography>\n                </Stack>\n            </Box>\n            {menu && <MessageOptions/>}\n    </Stack>\n  )\n}\n\nconst TextMsg = ({el,menu}) => {\n    const theme = useTheme();\n    const {user}  = useSelector((state)=>state.auth);\n    const is_incoming = user.id !== el.user_id;\n    return (\n        <Stack direction='row' justifyContent={is_incoming ? 'start' : 'end'}>\n            <Box p={1.5} sx={{\n                backgroundColor: is_incoming ? theme.palette.background.default :\n                    theme.palette.primary.main, borderRadius: 1.5, width: 'max-content'\n            }}>\n                <Typography variant='body2' color={is_incoming ? theme.palette.text : '#fff'}>\n                    {el.content}\n                </Typography>\n            </Box>\n            {menu && <MessageOptions/>}\n        </Stack>\n    )\n}\n\nconst TimeLine = ({ el }) => {\n    const theme = useTheme();\n    return <Stack direction='row' alignItems='center' justifyContent='space-between'>\n        <Divider width='46%' />\n        <Typography variant='caption' sx={{ color: theme.palette.text }}>\n            {el.text}\n        </Typography>\n        <Divider width='46%' />\n    </Stack>\n}\n\nconst MessageOptions = () => {\n    \n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <>\n    <DotsThreeVertical \n    id=\"basic-button\"\n    aria-controls={open ? 'basic-menu' : undefined}\n    aria-haspopup=\"true\"\n    aria-expanded={open ? 'true' : undefined}\n    onClick={handleClick}\n    size={20}\n    />\n\n    <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n      <Stack spacing={1} px={1}>\n        {Message_options.map((el,index)=>(\n            <MenuItem onClick={handleClick} key={index}>{el.title}</MenuItem>\n        ))}\n      </Stack>\n      </Menu>\n    </>\n  )\n}\n\n\n// should not be default export, because we need to export multiple things\nexport { TimeLine, TextMsg, MediaMsg, ReplyMsg, LinkMsg, DocMsg }","import { Avatar, Box, Typography,IconButton, Divider,Stack, } from '@mui/material'\nimport { CaretDown, MagnifyingGlass } from 'phosphor-react'\nimport React from 'react';\nimport { useTheme } from \"@mui/material/styles\";\nimport { faker } from '@faker-js/faker';\nimport StyledBadge from '../StyledBadge';\nimport { ToggleSidebar } from '../../redux/slices/app';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../redux/slices/authSlice';\nimport { Navigate } from 'react-router-dom';\n\nexport function isNotReal(ce)\n{\n  return Object.keys(ce).length === 0 && ce.constructor === Object;\n  // return obj && obj !== 'null' && obj !== 'undefined';\n}\nconst Header = () => {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const {messages} = useSelector((state) => state.messages);\n  const ce = messages?.conversation_element;\n \n  \n  if(isNotReal(ce)){\n    console.log(ce,'ceee')\n    return <></>\n  }\n  \n  const AvatarImg = (ce)=>{\n    return <Avatar alt={ce.name} src={faker.image.avatar()}/>\n  }\n  return (\n    <Box p={2} sx={{ width:'100%', backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background.paper, boxShadow:'0px 0px 2px rgba(0,0,0,0.25)'}}>\n    <Stack alignItems={'center'} direction='row' justifyContent={'space-between'}\n    sx={{width:'100%', height:'100%'}}>\n        <Stack onClick={()=>{\n            dispatch(ToggleSidebar());\n        }} direction={'row'} spacing={2}>\n            <Box>\n                {ce.is_online ? <StyledBadge  overlap=\"circular\"\n                anchorOrigin={{ // position\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                }}\n                variant=\"dot\">\n                    <AvatarImg ce={ce} />\n                </StyledBadge>: <AvatarImg ce={ce} />}\n                \n            </Box>\n            <Stack spacing={0.2}>\n                    <Typography variant='subtitle2'>\n                        {ce.is_group ? ce.name : ce?.users?.[0]?.name || ''}\n                    </Typography>\n                    <Typography variant='caption'>\n                        {ce.is_online ? 'Online': 'Offline'}\n                    </Typography>\n                </Stack>\n        </Stack>\n        <Stack direction='row' alignItems='center' spacing={3}>\n            {/* <IconButton>\n                <VideoCamera/>\n            </IconButton>\n            <IconButton>\n                <Phone/>\n            </IconButton> */}\n            <IconButton>\n                <MagnifyingGlass/>\n            </IconButton>\n            <Divider orientation='vertical' flexItem/>\n            <IconButton>\n                <CaretDown/>\n            </IconButton>\n        </Stack>\n    </Stack>\n</Box>\n  )\n}\n\nexport default Header","// import { Box, Fab, IconButton, InputAdornment, Stack, TextField, Tooltip } from '@mui/material';\n// import React, { useEffect, useState } from 'react';\n// import { styled, useTheme } from \"@mui/material/styles\";\n// import { LinkSimple, PaperPlaneTilt, Smiley,Camera, File, Image, Sticker, User } from 'phosphor-react';\n// import data from '@emoji-mart/data'\n// import Picker from '@emoji-mart/react'\n// import { apifetch } from '../../utils/fetchApi';\n// import { useSelector } from 'react-redux';\n// import { setMessages } from '../../redux/slices/messageSlice';\n// import { dispatch } from '../../redux/store';\n\n// const StyledInput = styled(TextField)(({ theme }) => ({\n//     \"& .MuiInputBase-input\": {\n//       paddingTop: '12px',\n//       paddingBottom: '12px',\n//     }  \n//   }));\n\n\n//   const Actions = [\n//     {\n//         color:'#4da5fe',\n//         icon: <Image size={24}/>,\n//         y:102,\n//         title:'Photo/Video'\n//     },\n//     {\n//         color:'#1b8cfe',\n//         icon: <Sticker size={24}/>,\n//         y:172,\n//         title:'Stickers'\n//     },\n//     {\n//         color:'#0172e4',\n//         icon: <Camera size={24}/>,\n//         y:242,\n//         title:'Image'\n//     },\n//     {\n//         color:'#0159b2',\n//         icon: <File size={24}/>,\n//         y:312,\n//         title:'Document'\n//     },\n//     {\n//         color:'#013f7f',\n//         icon: <User size={24}/>,\n//         y:382,\n//         title:'Contact'\n//     }\n//   ];\n  \n// let inputField = \"\";\n// const ChatInput = ({setOpenPicker}) =>{\n//     const [openAction, setOpenAction] = useState(false);\n    \n//     const handleInputChange = (e) => {\n//         inputField = e.target.value;\n//     }\n//     return (\n//         <StyledInput  onChange={handleInputChange} fullWidth placeholder='Write a message...' variant='filled' InputProps={{\n//             disableUnderline: true,\n//             startAdornment: \n//             <Stack sx={{width:'max-content'}}>\n//                 <Stack sx={{position:'relative', display: openAction ? 'inline-block' : 'none'}}>\n//                     {Actions.map((el,index)=>(\n//                         <Tooltip placement='right' title={el.title} key={index}>\n//                             <Fab sx={{position:'absolute', top: -el.y, backgroundColor: el.color}}>\n//                                 {el.icon}\n//                             </Fab>\n//                         </Tooltip>\n                      \n//                     ))}\n//                 </Stack>\n//                 <InputAdornment position=\"start\">\n//                     <IconButton onClick={()=>{\n//                         setOpenAction((prev)=>!prev)\n//                     }}>\n//                         <LinkSimple/>\n//                     </IconButton>\n//                 </InputAdornment>\n//             </Stack>\n//             ,\n//             endAdornment: <InputAdornment position=\"start\">\n//             <IconButton onClick={()=>{\n//                 setOpenPicker((prev)=> !prev);\n//             }}>\n//                 <Smiley/>\n//             </IconButton>\n//             </InputAdornment>\n//         }}/>\n//     )\n// }\n\n// const Footer = () => {\n//     const theme = useTheme();\n//     const [openPicker, setOpenPicker] = useState(false);\n//     const {token} = useSelector((state) => state.auth);\n//     const {messages} = useSelector((state) => state.messages);\n//     // const handleInputChange  = (e) => {\n//     //     setInputMessage(e.target.value);\n//     // }\n//     // useEffect(() => {\n\n//     //     console.log(messages,'new message')\n//     // },[messages])\n//     const handleSendMessage = async () => {\n//         const apiRes = await apifetch(\"/chat/send\",token,{conversation_id: messages.conversation_element.id,message: inputField },\"POST\")\n//         if(apiRes.success){\n//             inputField = \"\";\n            \n//             // messages.data[] = apiRes.data;\n  \n            \n//             const updatedMessages = {\n//                 ...messages, // Copy the previous state\n//                 data: [...messages.data, apiRes.data], // Append the new message to 'data'\n//               };\n            \n//               // Dispatch the action to update the state\n//               dispatch(setMessages(updatedMessages));\n            \n            \n//         }\n//     }\n//   return (\n//     <Box p={2} sx={{ width:'100%', backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' :\n//      theme.palette.background.paper, boxShadow:'0px 0px 2px rgba(0,0,0,0.25)'}}>\n//     <Stack direction='row' alignItems={'center'} spacing={3}>\n\n//         <Stack sx={{width:'100%'}}> \n//              {/* Chat Input */}\n//             <Box sx={{ display: openPicker ? 'inline' : 'none' , zIndex:10, position:'fixed',bottom:81, right:100}}>\n//                 <Picker theme={theme.palette.mode} data={data} onEmojiSelect={console.log}/>\n//             </Box> \n//             <ChatInput  setOpenPicker={setOpenPicker} />\n//         </Stack>\n        \n//         <Box onClick={handleSendMessage} sx={{height:48, width: 48, backgroundColor:theme.palette.primary.main, \n//         borderRadius: 1.5}}>\n//             <Stack sx={{height:'100%', width:'100%', alignItems:'center', justifyContent:'center'}}>\n//                 <IconButton>\n//                     <PaperPlaneTilt color='#fff'/>\n//                 </IconButton>\n//             </Stack>\n            \n//         </Box>\n//     </Stack>\n// </Box>\n//   )\n// }\n\n// export default Footer\n\n\nimport { Box, Fab, IconButton, InputAdornment, Stack, TextField, Tooltip } from '@mui/material';\nimport React, { useState } from 'react';\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport { LinkSimple, Smiley, Camera, File, Image, Sticker, User } from 'phosphor-react';\nimport { useSelector } from 'react-redux';\nimport { PaperPlaneTilt } from 'phosphor-react';\nimport { apifetch } from '../../utils/fetchApi';\nimport { addMessage, setMessages } from '../../redux/slices/messageSlice';\nimport { dispatch } from '../../redux/store';\nimport io from \"socket.io-client\";\n\n\nconst StyledInput = styled(TextField)(({ theme }) => ({\n    \"& .MuiInputBase-input\": {\n      paddingTop: '12px',\n      paddingBottom: '12px',\n    }  \n  }));\n\nconst Actions = [\n    {\n        color:'#4da5fe',\n        icon: <Image size={24}/>,\n        y:102,\n        title:'Photo/Video'\n    },\n    {\n        color:'#1b8cfe',\n        icon: <Sticker size={24}/>,\n        y:172,\n        title:'Stickers'\n    },\n    {\n        color:'#0172e4',\n        icon: <Camera size={24}/>,\n        y:242,\n        title:'Image'\n    },\n    {\n        color:'#0159b2',\n        icon: <File size={24}/>,\n        y:312,\n        title:'Document'\n    },\n    {\n        color:'#013f7f',\n        icon: <User size={24}/>,\n        y:382,\n        title:'Contact'\n    }\n];\n\nconst ChatInput = ({ setOpenPicker, inputField, setInputField }) => {\n    const [openAction, setOpenAction] = useState(false);\n\n    const handleInputChange = (e) => {\n        setInputField(e.target.value); // Update state on input change\n    };\n\n    return (\n        <StyledInput\n            value={inputField} // Bind the value to inputField\n            onChange={handleInputChange}\n            fullWidth\n            placeholder='Write a message...'\n            variant='filled'\n            InputProps={{\n                disableUnderline: true,\n                startAdornment: (\n                    <Stack sx={{ width: 'max-content' }}>\n                        <Stack sx={{ position: 'relative', display: openAction ? 'inline-block' : 'none' }}>\n                            {Actions.map((el, index) => (\n                                <Tooltip placement='right' title={el.title} key={index}>\n                                    <Fab sx={{ position: 'absolute', top: -el.y, backgroundColor: el.color }}>\n                                        {el.icon}\n                                    </Fab>\n                                </Tooltip>\n                            ))}\n                        </Stack>\n                        <InputAdornment position=\"start\">\n                            <IconButton onClick={() => setOpenAction((prev) => !prev)}>\n                                <LinkSimple />\n                            </IconButton>\n                        </InputAdornment>\n                    </Stack>\n                ),\n                endAdornment: (\n                    <InputAdornment position=\"start\">\n                        <IconButton onClick={() => setOpenPicker((prev) => !prev)}>\n                            <Smiley />\n                        </IconButton>\n                    </InputAdornment>\n                ),\n            }}\n        />\n    );\n};\n\n\nconst Footer = () => {\n    const theme = useTheme();\n    const [openPicker, setOpenPicker] = useState(false);\n    const { token } = useSelector((state) => state.auth);\n    const { messages } = useSelector((state) => state.messages);\n    // const socket = io(\"http://localhost:3002\");\n    const [inputField, setInputField] = useState('');\n\n    const handleSendMessage = async () => {\n        if (inputField.trim()) {\n            const apiRes = await apifetch(\"/chat/send\", token, { conversation_id: messages.conversation_element.id, message: inputField }, \"POST\");\n            if (apiRes.success) {\n                setInputField('');\n                apiRes.data.type = \"text\";\n                dispatch(addMessage(apiRes.data));\n                \n            }\n        }\n    };\n\n    return (\n        <Box p={2} sx={{ width: '100%', backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background.paper, boxShadow: '0px 0px 2px rgba(0,0,0,0.25)' }}>\n            <Stack direction='row' alignItems={'center'} spacing={3}>\n                <Stack sx={{ width: '100%' }}>\n                    {/* Chat Input */}\n                    <ChatInput setOpenPicker={setOpenPicker} inputField={inputField} setInputField={setInputField} />\n                </Stack>\n\n                <Box onClick={handleSendMessage} sx={{ height: 48, width: 48, backgroundColor: theme.palette.primary.main, borderRadius: 1.5 }}>\n                    <Stack sx={{ height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center' }}>\n                        <IconButton>\n                            <PaperPlaneTilt color='#fff' />\n                        </IconButton>\n                    </Stack>\n                </Box>\n            </Stack>\n        </Box>\n    );\n};\n\nexport default Footer;\n","import {  Box, Stack} from '@mui/material';\nimport React from 'react';\nimport { useTheme } from \"@mui/material/styles\";\nimport Header from './Header';\nimport Footer from './Footer';\nimport Message from './Message';\n\n\nconst Conversation = () => {\n    const theme = useTheme();\n\n  return (\n    <Stack height={'100%'} maxHeight={'100vh'} width={'auto'}>\n\n        {/* Chat header */}\n        <Header/>\n        {/* Msg */}\n        <Box className='scrollbar' width={\"100%\"} sx={{flexGrow:1, height:'100%', overflowY:'scroll'}}>\n        <Message menu={true}/>\n        </Box>\n        {/* Chat footer */}\n       <Footer/>\n    </Stack>\n  )\n}\n\nexport default Conversation","import styled from \"@emotion/styled\";\nimport { Badge } from \"@mui/material\";\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n    \"& .MuiBadge-badge\": {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"',\n      },\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1,\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0,\n      },\n    },\n  }));\n\n  export default StyledBadge"],"names":["socket","io","NODE_SERVER","autoConnect","menu","messages","useSelector","state","user","auth","useEffect","on","data","console","log","conversation_id","conversation_element","id","user_id","dispatch","addMessage","off","messagesEndRef","useRef","current","scrollIntoView","behavior","Box","p","Stack","spacing","reverse","map","el","index","type","ref","DocMsg","theme","useTheme","direction","justifyContent","incoming","sx","backgroundColor","palette","background","default","primary","main","borderRadius","width","alignItems","paper","size","variant","color","text","message","MessageOptions","LinkMsg","src","preview","alt","style","maxHeight","component","Link","to","TextMsg","is_incoming","content","React","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","undefined","onClick","onClose","MenuListProps","px","Message_options","title","useDispatch","ce","Object","keys","length","constructor","isNotReal","AvatarImg","Avatar","name","faker","mode","boxShadow","height","ToggleSidebar","is_online","StyledBadge","overlap","anchorOrigin","vertical","horizontal","Typography","is_group","users","IconButton","Divider","orientation","flexItem","StyledInput","styled","TextField","paddingTop","paddingBottom","Actions","icon","y","ChatInput","setOpenPicker","inputField","setInputField","useState","openAction","setOpenAction","value","onChange","e","target","fullWidth","placeholder","InputProps","disableUnderline","startAdornment","position","display","Tooltip","placement","Fab","top","InputAdornment","prev","endAdornment","token","handleSendMessage","trim","apifetch","apiRes","success","className","flexGrow","overflowY","Message","Badge","left","animation","border","transform","opacity"],"sourceRoot":""}